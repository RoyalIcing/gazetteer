{"version":3,"file":"chunk-2dc0d675.js","sources":["../src/types.ts","../src/main.ts","../src/root/DataSourceContext.tsx"],"sourcesContent":["// Data source identifiers\n\nexport type DataSourceIdentifier =\n  | { type: \"symbol\"; symbol: symbol }\n  | { type: \"urlParam\"; param: string };\n\nexport function uniqueDataSource(\n  from: string\n): { type: \"symbol\"; symbol: symbol } {\n  return { type: \"symbol\", symbol: Symbol.for(`DataSource.${from}`) };\n}\n\nexport function urlParam(\n  paramName: string\n): { type: \"urlParam\"; param: string } {\n  return { type: \"urlParam\", param: paramName };\n}\n\nexport function dataSourceIdentifierToString(\n  identifier: DataSourceIdentifier\n): string {\n  if (identifier.type === \"symbol\") {\n    return identifier.symbol.toString();\n  } else if (identifier.type === \"urlParam\") {\n    return `urlParam:${identifier.param}`;\n  } else {\n    throw new Error(\"Unknown data source identifier\");\n  }\n}\n\n// Templates\n\nexport type TemplateIdentifier =\n  | { type: \"template\"; framework: \"react\"; componentName: symbol }\n  | { type: \"template\"; framework: \"vue\"; componentName: symbol };\n\nexport function reactTemplate(\n  componentName: string\n): { type: \"template\"; framework: \"react\"; componentName: symbol } {\n  return {\n    type: \"template\",\n    framework: \"react\",\n    componentName: Symbol.for(`DataSource.${componentName}`)\n  };\n}\n\nexport type DataSourceResult<Data = {}> =\n  | { data?: Data; error?: Error; loaded: true }\n  | { loaded: false };\n\nexport interface GazetteerRoute {\n  paths: Array<string>;\n  dataSources: Array<DataSourceIdentifier>;\n  template: TemplateIdentifier;\n}\n","import {\n  GazetteerRoute,\n  uniqueDataSource,\n  urlParam,\n  reactTemplate\n} from \"./types\";\n\nexport const DataSources = {\n  Feed: {\n    list: uniqueDataSource(\"Feed.list\")\n  },\n  Viewer: {\n    profile: uniqueDataSource(\"Viewer.profile\")\n  },\n  URLParams: {\n    username: urlParam(\"username\")\n  }\n};\n\nexport const Templates = {\n  Feed: reactTemplate(\"Feed\"),\n  EditAccount: reactTemplate(\"EditAccount\"),\n  UserProfile: reactTemplate(\"UserProfile\")\n};\n\nexport const routes: Array<GazetteerRoute> = [\n  {\n    paths: [\"/feed\"],\n    dataSources: [DataSources.Feed.list, DataSources.Viewer.profile],\n    template: Templates.Feed\n  },\n  {\n    paths: [\"/account\"],\n    dataSources: [DataSources.Viewer.profile],\n    template: Templates.EditAccount\n  },\n  {\n    paths: [\"/user/{username}\"],\n    // paths: [[\"/user/\", /[^\\W0-9]\\w+/]],\n    // paths: [[\"/user/\", p.string]],\n    // paths: [[\"/user/\", String]],\n    dataSources: [DataSources.URLParams.username],\n    template: Templates.UserProfile\n  }\n];\n","import React, { useContext } from \"react\";\n\nimport { DataSourceResult, DataSourceIdentifier, dataSourceIdentifierToString } from \"../types\";\n\nexport const DataSourceContext = React.createContext(\n  function<Data>(identifier: DataSourceIdentifier) {\n    return { loaded: false } as DataSourceResult<Data>\n  }\n);\n\nexport function useDataSource<Data>(identifier: DataSourceIdentifier): DataSourceResult<Data> {\n  const resultForDataSource = useContext(DataSourceContext);\n  return resultForDataSource(identifier);\n}\n\nexport function useRequiredDataSource<Data>(identifier: DataSourceIdentifier): Data {\n  const result = useDataSource(identifier) as DataSourceResult<Data>;\n  if (result.loaded && result.data != null) {\n    return result.data;\n  } else {\n    if (result.loaded && result.error != null) {\n      throw new Error(`Required data source ${dataSourceIdentifierToString(identifier)} error: ${result.error.message}`)\n    }\n\n    throw new Error(`Required data source ${dataSourceIdentifierToString(identifier)} not loaded`)\n  }\n}\n"],"names":[],"mappings":";;;AAAA;SAMgB,gBAAgB,CAC9B,IAAY;IAEZ,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,CAAC,GAAG,CAAC,gBAAc,IAAM,CAAC,EAAE,CAAC;CACrE;SAEe,QAAQ,CACtB,SAAiB;IAEjB,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC;CAC/C;SAEe,4BAA4B,CAC1C,UAAgC;IAEhC,IAAI,UAAU,CAAC,IAAI,KAAK,QAAQ,EAAE;QAChC,OAAO,UAAU,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;KACrC;SAAM,IAAI,UAAU,CAAC,IAAI,KAAK,UAAU,EAAE;QACzC,OAAO,cAAY,UAAU,CAAC,KAAO,CAAC;KACvC;SAAM;QACL,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;KACnD;CACF;;ICrBY,WAAW,GAAG;IACzB,IAAI,EAAE;QACJ,IAAI,EAAE,gBAAgB,CAAC,WAAW,CAAC;KACpC;IACD,MAAM,EAAE;QACN,OAAO,EAAE,gBAAgB,CAAC,gBAAgB,CAAC;KAC5C;IACD,SAAS,EAAE;QACT,QAAQ,EAAE,QAAQ,CAAC,UAAU,CAAC;KAC/B;CACF;;ACbM,IAAM,iBAAiB,GAAG,KAAK,CAAC,aAAa,CAClD,UAAe,UAAgC;IAC7C,OAAO,EAAE,MAAM,EAAE,KAAK,EAA4B,CAAA;CACnD,CACF,CAAC;SAEc,aAAa,CAAO,UAAgC;IAClE,IAAM,mBAAmB,GAAG,gBAAU,CAAC,iBAAiB,CAAC,CAAC;IAC1D,OAAO,mBAAmB,CAAC,UAAU,CAAC,CAAC;CACxC;SAEe,qBAAqB,CAAO,UAAgC;IAC1E,IAAM,MAAM,GAAG,aAAa,CAAC,UAAU,CAA2B,CAAC;IACnE,IAAI,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,IAAI,IAAI,IAAI,EAAE;QACxC,OAAO,MAAM,CAAC,IAAI,CAAC;KACpB;SAAM;QACL,IAAI,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,KAAK,IAAI,IAAI,EAAE;YACzC,MAAM,IAAI,KAAK,CAAC,0BAAwB,4BAA4B,CAAC,UAAU,CAAC,gBAAW,MAAM,CAAC,KAAK,CAAC,OAAS,CAAC,CAAA;SACnH;QAED,MAAM,IAAI,KAAK,CAAC,0BAAwB,4BAA4B,CAAC,UAAU,CAAC,gBAAa,CAAC,CAAA;KAC/F;CACF;;"}